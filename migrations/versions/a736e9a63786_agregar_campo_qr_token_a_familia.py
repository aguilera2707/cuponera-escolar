"""Agregar campo qr_token a Familia

Revision ID: a736e9a63786
Revises: afe438e62657
Create Date: 2025-08-12 12:07:56.184829

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a736e9a63786'
down_revision = 'afe438e62657'
branch_labels = None
depends_on = None


from uuid import uuid4

def upgrade():
    with op.batch_alter_table('familia', schema=None) as batch_op:
        batch_op.add_column(sa.Column('qr_token', sa.String(length=64), nullable=True))
        batch_op.create_unique_constraint('uq_familia_qr_token', ['qr_token'])

    # Asignar token único a familias existentes
    conn = op.get_bind()
    familias = conn.execute(sa.text("SELECT id FROM familia")).fetchall()
    for f in familias:
        conn.execute(
            sa.text("UPDATE familia SET qr_token = :token WHERE id = :id"),
            {"token": uuid4().hex, "id": f.id}
        )

    # Cambiar a NOT NULL después de rellenar
    with op.batch_alter_table('familia', schema=None) as batch_op:
        batch_op.alter_column('qr_token', nullable=False)



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('familia', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('qr_token')

    # ### end Alembic commands ###
